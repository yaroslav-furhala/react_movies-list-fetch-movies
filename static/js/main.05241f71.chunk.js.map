{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","title","Plot","MoviesList","movies","map","imdbId","FindMovie","choosedMovie","useState","setTitle","preview","setPreview","error","setError","htmlFor","type","id","placeholder","classnames","value","onChange","event","target","disabled","onClick","fetch","then","response","json","getFilmByTitle","film","Error","every","current","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"uTAQaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBACEA,UAAU,aACV,UAAQ,aAFV,SAKE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBACEA,UAAU,aACV,UAAQ,cAFV,SAIGD,EAAMK,aAIb,sBACEJ,UAAU,UACV,UAAQ,UAFV,UAIGD,EAAMM,KACP,iCCvCGC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uBCFNC,G,MAA6B,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,aAAcJ,EAAa,EAAbA,OACzD,EAA0BK,mBAAS,IAAnC,mBAAOR,EAAP,KAAcS,EAAd,KACA,EAA8BD,mBAAuB,MAArD,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEA,OACE,qCACE,uBACEjB,UAAU,aADZ,UAGE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQkB,QAAQ,cAAjC,yBAIA,qBAAKlB,UAAU,UAAf,SACE,uBACEmB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZrB,UAAWsB,IACT,QACA,CACE,YAAaN,IAGjBO,MAAOnB,EACPoB,SAAU,SAACC,GACTZ,EAASY,EAAMC,OAAOH,OACtBN,GAAS,QAKdD,GAEC,mBAAGhB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEmB,KAAK,SACL,UAAQ,OACRnB,UAAU,kBACV2B,UAAWvB,EACXwB,QAAS,YCzDO,SAACxB,GAC7B,OAAOyB,MAAM,GAAD,OAHF,uDAGE,cAAazB,IACtB0B,MAAK,SAAAC,GACJ,OAAOA,EAASC,WDuDNC,CAAe7B,GACZ0B,MAAK,SAAAI,GAOJ,OANIA,EAAKC,MACPlB,GAAS,GAETF,EAAWmB,GAGN,SAdf,4BAsBF,qBAAKlC,UAAU,UAAf,SACE,wBACEmB,KAAK,SACL,UAAQ,MACRnB,UAAU,oBACV2B,SAAUX,EACVY,QAAS,WACS,OAAZd,GACCP,EAAO6B,OAAM,SAAArC,GAAK,OAAIA,EAAMU,SAAWK,EAAQL,WAClDE,GAAa,SAAA0B,GAAO,4BAAQA,GAAR,CAAiBvB,OAGvCC,EAAW,MACXF,EAAS,KAZb,qCAqBN,sBAAKb,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCc,GAEC,cAAC,EAAD,CAAWf,MAAOe,YElGfwB,EAAgB,WAC3B,MAA4B1B,mBAAkB,IAA9C,mBAAOL,EAAP,KAAegC,EAAf,KAEA,OACE,sBAAKvC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWW,aAAc4B,EAAWhC,OAAQA,UCXpDiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.05241f71.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div\n        className=\"card-image\"\n        data-cy=\"card-image\"\n      >\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p\n              className=\"title is-8\"\n              data-cy=\"movie-title\"\n            >\n              {movie.title}\n            </p>\n          </div>\n        </div>\n        <div\n          className=\"content\"\n          data-cy=\"content\"\n        >\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport classnames from 'classnames';\nimport './FindMovie.scss';\nimport { getFilmByTitle } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  choosedMovie: Dispatch<SetStateAction<Movie[]>>,\n  movies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props> = ({ choosedMovie, movies }) => {\n  const [title, setTitle] = useState('');\n  const [preview, setPreview] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classnames(\n                'input',\n                {\n                  'is-danger': error,\n                },\n              )}\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error\n          && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              data-cy=\"find\"\n              className=\"button is-light\"\n              disabled={!title}\n              onClick={() => {\n                getFilmByTitle(title)\n                  .then(film => {\n                    if (film.Error) {\n                      setError(true);\n                    } else {\n                      setPreview(film);\n                    }\n\n                    return null;\n                  });\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              data-cy=\"add\"\n              className=\"button is-primary\"\n              disabled={error}\n              onClick={() => {\n                if (preview !== null\n                  && movies.every(movie => movie.imdbId !== preview.imdbId)) {\n                  choosedMovie(current => [...current, preview]);\n                }\n\n                setPreview(null);\n                setTitle('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {preview\n        && (\n          <MovieCard movie={preview} />\n        )}\n      </div>\n    </>\n  );\n};\n","import { Movie } from './types/Movie';\n\nconst API = ' http://www.omdbapi.com/?i=tt3896198&apikey=16b19e1d';\n\nexport const getFilmByTitle = (title: string): Promise<Movie> => {\n  return fetch(`${API}&t=${title}`)\n    .then(response => {\n      return response.json();\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie choosedMovie={setMovies} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}